*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;

    font-family: monospace;
}

:root{
    --box-shadow:
        inset -1vh -1vh 2vh 0 #00000021,
        inset -0.25vh -0.25vh 0.5vh 0 #00000032,
        1vh 1vh 2vh 0 #00000042
    ;
    --box-shadow-inset:
        inset -1vh -1vh 2vh 0 #00000021,
        inset -0.25vh -0.25vh 0.5vh 0 #00000032
    ;
    --box-shadow-outset:1vh 1vh 2vh #00000042;
    --noise:url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' id='noice'%3E%3Cfilter id='noise-filter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='2' numOctaves='1100' stitchTiles='stitch'%3E%3C/feTurbulence%3E%3CfeColorMatrix type='saturate' values='0'%3E%3C/feColorMatrix%3E%3CfeComponentTransfer%3E%3CfeFuncR type='linear' slope='1.81'%3E%3C/feFuncR%3E%3CfeFuncG type='linear' slope='1.81'%3E%3C/feFuncG%3E%3CfeFuncB type='linear' slope='1.81'%3E%3C/feFuncB%3E%3CfeFuncA type='linear' slope='0.64'%3E%3C/feFuncA%3E%3C/feComponentTransfer%3E%3CfeComponentTransfer%3E%3CfeFuncR type='linear' slope='3' intercept='-1.00'/%3E%3CfeFuncG type='linear' slope='3' intercept='-1.00'/%3E%3CfeFuncB type='linear' slope='3' intercept='-1.00'/%3E%3C/feComponentTransfer%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noise-filter)'%3E%3C/rect%3E%3C/svg%3E");
}

body{
    height: 100vh;
    overflow: hidden;
    display: flex;
    flex-direction: column;
}

#canvas{
    width: 100%;
    flex-basis: 100%;
}

*:has(> .canvasElement){
    margin:0;
    padding: 0;
    overflow: hidden;
    position: relative;
    background-image: url(../images/dots.svg);
    background-position: 0px 0px;
}

.canvasElement{
    /* background-color: white; */
}

.interface{
    background-color: rgba(255, 255, 255, 0.5);
    background-image: var(--noise);
    backdrop-filter: blur(5px);
    border-radius: 2vh;
    box-shadow:var(--box-shadow);
    position: absolute;
    max-width: 40vmin;
    top: 10px; /*testing*/
    left: 10px; /*testing*/
    display: none;
    opacity: 0;
    transition: opacity 0.2s;
    z-index: 5;
    overflow: hidden;
    flex: 1 1 0;
    flex-wrap: wrap;
}

.interface.active{
    opacity: 1;
}

.interfaceBackdrop{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 4;
    opacity: 0;
    display: none;
}

.editCanvas{
    position: absolute;
    top: 0;
    left: 0;
    z-index: 3;
}

.constraint.active{
    z-index: 2;
    display: initial;
}
.constraint{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    display: none;
}

.scale{
    position: absolute;
    top: 0;
    left: 0;
    width: 90vmin;
    height: 20vh;
    background-color: rgba(255, 255, 255, 0.25);
    border-bottom-left-radius: 2vh;
    border-bottom-right-radius: 2vh;
    box-shadow: var(--box-shadow);
    background-image: var(--noise);
    overflow: hidden;
    user-drag: none;
    pointer-events:all;
}

.scale > .scaleScale{
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 30px;
    background-image: url(../images/scale.svg);
}

.scalePanControl{
    position: absolute;
    left: 50%;
    top: 0;
    width: 80%;
    height:100%;
    transform: translateX(-50%);
    /* cursor:grab; */
}

.scalePanControl:active{
    /* cursor: grabbing; */
}

.coordCounter{
    position: absolute;
    bottom: 0;
    left: 0;
    z-index: 10000000;
}

.protractor{
    width: 50vmin;
    height: 50vmin;
    border-radius: 100vmax;
    background-color: rgba(255, 255, 255, 0.25);
    box-shadow: var(--box-shadow);
    background-image: var(--noise), url(../images/protractor.svg);
    background-size: 100%;
    position: absolute;
    top: 0;
    left: 0;
}

.protractor > span{
    position: absolute;
    top: 33%;
    left: 50%;
    transform: translate(-50%, -50%);
    box-shadow: var(--box-shadow);
    background-image: var(--noise);
    padding: 1vh 2vh;
    border-radius: 100vmax;
    background-color: white;
    user-select: none;
    pointer-events: none;
    font-size: 1.15rem;
}

.compass{
    width: 50%;
    height: 50%;
    position: absolute;
    top: 25%;
    left: 25%;
    /* transform: translate(-50%, -50%); */
    /* background-color: red; */
/* } */
}

.pinEnd{
    position: absolute;
    user-select: none;
    -webkit-user-drag: none;
    height: 132vmin;
    top: 0;
    left: 0;
    transform-origin: 0 0;
    transform: translate(-50%, -50%);
    filter: drop-shadow(var(--box-shadow-outset));
    /* animation: identifier 2s linear 0s infinite forwards; */
}

@keyframes identifier {
    from{
        rotate: 0deg;
    }
    to{
        rotate: 360deg;
    }
}

.penEnd{
    position: absolute;
    user-select: none;
    -webkit-user-drag: none;
    height: 132vmin;
    top: 100%;
    left: 100%;
    transform-origin: 0 0;
    transform: translate(-50%, -50%);
    filter: drop-shadow(var(--box-shadow-outset));
    /* animation: identifier 2s linear 0s infinite forwards; */
}

.pinController{
    position: absolute;
    top: 0;
    left: 0;
    transform: translate(-50%, -50%);
    width: 7vmin;
    height: 7vmin;
    /* background-color: blue; */
    border-radius: 100vmax;
}
.penController{
    position: absolute;
    top: 100%;
    left: 100%;
    transform: translate(-50%, -50%);
    width: 7vmin;
    height: 7vmin;
    /* background-color: blue; */
    border-radius: 100vmax;
}

.notch{
    position: absolute;
    top: 100%;
    left: 100%;
    transform: translate(-50%, -50%);
    width: 10vmin;
    height: 10vmin;
    background-color: white;
    box-shadow: var(--box-shadow);
    background-image: var(--noise);
    border-radius: 100vmax;
}